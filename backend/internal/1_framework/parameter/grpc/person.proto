syntax = "proto3";

package grpc_parameter;

option go_package = "github.com/YujiYabe/go-docker-template/backend/internal/1_framework/parameter/grpc";

service Person {
    rpc GetPersonByCondition (V1GetPersonByConditionRequest) returns (V1GetPersonByConditionResponse);
}
message V1ImmutableParameter { // 不変な情報
    string traceID = 1;              // リクエスト情報: システム全体で一意な追跡ID。ログ追跡やデバッグに使用
    int64 requestStartTime = 2;      // リクエスト情報: リクエストの開始時刻（Unix timestamp）
    string clientIP = 3;             // リクエスト情報: クライアントのIPアドレス
    string userAgent = 4;            // リクエスト情報: クライアントのユーザーエージェント情報
    string userID = 5;               // ユーザー認証情報: ユーザーを一意に識別するID
    repeated string permissions = 6; // ユーザー認証情報: ユーザーに付与された権限リスト
    string accessToken = 7;          // ユーザー認証情報: ユーザー認証用のJWTトークン
    string tenantID = 8;             // ビジネスコンテキスト: マルチテナント環境での所属テナントID
    string locale = 9;               // ビジネスコンテキスト: ユーザーの言語設定（例：ja-JP）
    string timezone = 10;            // ビジネスコンテキスト: ユーザーのタイムゾーン（例：Asia/Tokyo）
}

message V1MutableParameter {         // リクエスト処理中に変更される可能性のある情報
    string timestamp = 1;            // 分散システム制御情報: 処理の各段階での時刻記録
    int32 retryCount = 2;            // 分散システム制御情報: リトライ試行回数の現在値
    bool circuitBreakerEnabled = 3;  // 分散システム制御情報: サーキットブレーカーの現在の有効状態
    int32 rateLimit = 4;             // 分散システム制御情報: 現在の速度制限値（リクエスト/秒）
    int32 timeoutSeconds = 5;        // リクエスト情報: リクエスト処理の残り時間（秒）
    int32 resourceQuota = 6;         // デバッグ/モニタリング情報: 割り当てられたリソース使用量の制限値
    bool samplingEnabled = 7;        // デバッグ/モニタリング情報: パフォーマンスサンプリングの有効状態
    bool debugMode = 8;              // デバッグ/モニタリング情報: デバッグモードの有効状態
}

message V1CommonParameter {
    V1ImmutableParameter immutable = 1;
    V1MutableParameter mutable = 2;
}

message V1GetPersonByConditionRequest {
    optional V1CommonParameter v1CommonParameter = 1; // V1CommonParameter
    V1PersonParameter v1PersonParameter = 2; // V1PersonParameterArray
}

message V1GetPersonByConditionResponse {
    V1CommonParameter v1CommonParameter = 1;           // V1CommonParameter
    V1PersonParameterArray v1PersonParameterArray = 2; // V1PersonParameterArray
}


message V1PersonParameter {
    optional uint32 id = 2;           // ID
    optional string name = 3;         // Name
    optional string mail_address = 4; // Mail Address
}

message V1PersonParameterArray {
    repeated V1PersonParameter persons = 2; // Array of V1PersonParameter
}
