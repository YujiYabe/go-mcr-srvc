// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v5.29.2
// source: backend/internal/1_framework/parameter/grpc/person.proto

package grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type V1CommonParameter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Error         *V1Error               `protobuf:"bytes,1,opt,name=error,proto3,oneof" json:"error,omitempty"`
	Immutable     *V1ImmutableParameter  `protobuf:"bytes,2,opt,name=immutable,proto3" json:"immutable,omitempty"`
	Mutable       *V1MutableParameter    `protobuf:"bytes,3,opt,name=mutable,proto3" json:"mutable,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *V1CommonParameter) Reset() {
	*x = V1CommonParameter{}
	mi := &file_backend_internal_1_framework_parameter_grpc_person_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *V1CommonParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*V1CommonParameter) ProtoMessage() {}

func (x *V1CommonParameter) ProtoReflect() protoreflect.Message {
	mi := &file_backend_internal_1_framework_parameter_grpc_person_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use V1CommonParameter.ProtoReflect.Descriptor instead.
func (*V1CommonParameter) Descriptor() ([]byte, []int) {
	return file_backend_internal_1_framework_parameter_grpc_person_proto_rawDescGZIP(), []int{0}
}

func (x *V1CommonParameter) GetError() *V1Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *V1CommonParameter) GetImmutable() *V1ImmutableParameter {
	if x != nil {
		return x.Immutable
	}
	return nil
}

func (x *V1CommonParameter) GetMutable() *V1MutableParameter {
	if x != nil {
		return x.Mutable
	}
	return nil
}

type V1Error struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`       // エラーコード (例: INVALID_PARAMETER, NOT_FOUND)
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // エラーメッセージ
	Detail        string                 `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"`   // 詳細なエラー情報
	Field         string                 `protobuf:"bytes,4,opt,name=field,proto3" json:"field,omitempty"`     // エラーが発生したフィールド名
	Errors        []*V1Error             `protobuf:"bytes,5,rep,name=errors,proto3" json:"errors,omitempty"`   // ネストされたエラー情報
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *V1Error) Reset() {
	*x = V1Error{}
	mi := &file_backend_internal_1_framework_parameter_grpc_person_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *V1Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*V1Error) ProtoMessage() {}

func (x *V1Error) ProtoReflect() protoreflect.Message {
	mi := &file_backend_internal_1_framework_parameter_grpc_person_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use V1Error.ProtoReflect.Descriptor instead.
func (*V1Error) Descriptor() ([]byte, []int) {
	return file_backend_internal_1_framework_parameter_grpc_person_proto_rawDescGZIP(), []int{1}
}

func (x *V1Error) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *V1Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *V1Error) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *V1Error) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *V1Error) GetErrors() []*V1Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

type V1ImmutableParameter struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	TraceId          string                 `protobuf:"bytes,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`                               // リクエスト情報: システム全体で一意な追跡ID。ログ追跡やデバッグに使用
	RequestStartTime int64                  `protobuf:"varint,2,opt,name=request_start_time,json=requestStartTime,proto3" json:"request_start_time,omitempty"` // リクエスト情報: リクエストの開始時刻（Unix timestamp）
	ClientIp         string                 `protobuf:"bytes,3,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`                            // リクエスト情報: クライアントのIPアドレス
	UserAgent        string                 `protobuf:"bytes,4,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`                         // リクエスト情報: クライアントのユーザーエージェント情報
	UserId           string                 `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                  // ユーザー認証情報: ユーザーを一意に識別するID
	Permissions      []string               `protobuf:"bytes,6,rep,name=permissions,proto3" json:"permissions,omitempty"`                                      // ユーザー認証情報: ユーザーに付与された権限リスト
	AccessToken      string                 `protobuf:"bytes,7,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`                   // ユーザー認証情報: ユーザー認証用のJWTトークン
	TenantId         string                 `protobuf:"bytes,8,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`                            // ビジネスコンテキスト: マルチテナント環境での所属テナントID
	Locale           string                 `protobuf:"bytes,9,opt,name=locale,proto3" json:"locale,omitempty"`                                                // ビジネスコンテキスト: ユーザーの言語設定（例：ja-JP）
	Timezone         string                 `protobuf:"bytes,10,opt,name=timezone,proto3" json:"timezone,omitempty"`                                           // ビジネスコンテキスト: ユーザーのタイムゾーン（例：Asia/Tokyo）
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *V1ImmutableParameter) Reset() {
	*x = V1ImmutableParameter{}
	mi := &file_backend_internal_1_framework_parameter_grpc_person_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *V1ImmutableParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*V1ImmutableParameter) ProtoMessage() {}

func (x *V1ImmutableParameter) ProtoReflect() protoreflect.Message {
	mi := &file_backend_internal_1_framework_parameter_grpc_person_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use V1ImmutableParameter.ProtoReflect.Descriptor instead.
func (*V1ImmutableParameter) Descriptor() ([]byte, []int) {
	return file_backend_internal_1_framework_parameter_grpc_person_proto_rawDescGZIP(), []int{2}
}

func (x *V1ImmutableParameter) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *V1ImmutableParameter) GetRequestStartTime() int64 {
	if x != nil {
		return x.RequestStartTime
	}
	return 0
}

func (x *V1ImmutableParameter) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *V1ImmutableParameter) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *V1ImmutableParameter) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *V1ImmutableParameter) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *V1ImmutableParameter) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *V1ImmutableParameter) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *V1ImmutableParameter) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *V1ImmutableParameter) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

type V1MutableParameter struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	TimeStamp             string                 `protobuf:"bytes,1,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"`                                        // 分散システム制御情報: 処理の各段階での時刻記録
	RetryCount            int32                  `protobuf:"varint,2,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`                                    // 分散システム制御情報: リトライ試行回数の現在値
	CircuitBreakerEnabled bool                   `protobuf:"varint,3,opt,name=circuit_breaker_enabled,json=circuitBreakerEnabled,proto3" json:"circuit_breaker_enabled,omitempty"` // 分散システム制御情報: サーキットブレーカーの現在の有効状態
	RateLimit             int32                  `protobuf:"varint,4,opt,name=rate_limit,json=rateLimit,proto3" json:"rate_limit,omitempty"`                                       // 分散システム制御情報: 現在の速度制限値（リクエスト/秒）
	TimeoutSecond         int32                  `protobuf:"varint,5,opt,name=timeout_second,json=timeoutSecond,proto3" json:"timeout_second,omitempty"`                           // リクエスト情報: リクエスト処理の残り時間（秒）
	ResourceQuota         int32                  `protobuf:"varint,6,opt,name=resource_quota,json=resourceQuota,proto3" json:"resource_quota,omitempty"`                           // デバッグ/モニタリング情報: 割り当てられたリソース使用量の制限値
	SamplingEnabled       bool                   `protobuf:"varint,7,opt,name=sampling_enabled,json=samplingEnabled,proto3" json:"sampling_enabled,omitempty"`                     // デバッグ/モニタリング情報: パフォーマンスサンプリングの有効状態
	DebugMode             bool                   `protobuf:"varint,8,opt,name=debug_mode,json=debugMode,proto3" json:"debug_mode,omitempty"`                                       // デバッグ/モニタリング情報: デバッグモードの有効状態
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *V1MutableParameter) Reset() {
	*x = V1MutableParameter{}
	mi := &file_backend_internal_1_framework_parameter_grpc_person_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *V1MutableParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*V1MutableParameter) ProtoMessage() {}

func (x *V1MutableParameter) ProtoReflect() protoreflect.Message {
	mi := &file_backend_internal_1_framework_parameter_grpc_person_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use V1MutableParameter.ProtoReflect.Descriptor instead.
func (*V1MutableParameter) Descriptor() ([]byte, []int) {
	return file_backend_internal_1_framework_parameter_grpc_person_proto_rawDescGZIP(), []int{3}
}

func (x *V1MutableParameter) GetTimeStamp() string {
	if x != nil {
		return x.TimeStamp
	}
	return ""
}

func (x *V1MutableParameter) GetRetryCount() int32 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

func (x *V1MutableParameter) GetCircuitBreakerEnabled() bool {
	if x != nil {
		return x.CircuitBreakerEnabled
	}
	return false
}

func (x *V1MutableParameter) GetRateLimit() int32 {
	if x != nil {
		return x.RateLimit
	}
	return 0
}

func (x *V1MutableParameter) GetTimeoutSecond() int32 {
	if x != nil {
		return x.TimeoutSecond
	}
	return 0
}

func (x *V1MutableParameter) GetResourceQuota() int32 {
	if x != nil {
		return x.ResourceQuota
	}
	return 0
}

func (x *V1MutableParameter) GetSamplingEnabled() bool {
	if x != nil {
		return x.SamplingEnabled
	}
	return false
}

func (x *V1MutableParameter) GetDebugMode() bool {
	if x != nil {
		return x.DebugMode
	}
	return false
}

type GetPersonByConditionRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	V1CommonParameter *V1CommonParameter     `protobuf:"bytes,1,opt,name=v1_common_parameter,json=v1CommonParameter,proto3,oneof" json:"v1_common_parameter,omitempty"`
	V1PersonParameter *V1PersonParameter     `protobuf:"bytes,2,opt,name=v1_person_parameter,json=v1PersonParameter,proto3" json:"v1_person_parameter,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetPersonByConditionRequest) Reset() {
	*x = GetPersonByConditionRequest{}
	mi := &file_backend_internal_1_framework_parameter_grpc_person_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPersonByConditionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonByConditionRequest) ProtoMessage() {}

func (x *GetPersonByConditionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_internal_1_framework_parameter_grpc_person_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonByConditionRequest.ProtoReflect.Descriptor instead.
func (*GetPersonByConditionRequest) Descriptor() ([]byte, []int) {
	return file_backend_internal_1_framework_parameter_grpc_person_proto_rawDescGZIP(), []int{4}
}

func (x *GetPersonByConditionRequest) GetV1CommonParameter() *V1CommonParameter {
	if x != nil {
		return x.V1CommonParameter
	}
	return nil
}

func (x *GetPersonByConditionRequest) GetV1PersonParameter() *V1PersonParameter {
	if x != nil {
		return x.V1PersonParameter
	}
	return nil
}

// PersonサービスのResponse定義を更新
type GetPersonByConditionResponse struct {
	state                  protoimpl.MessageState  `protogen:"open.v1"`
	V1CommonParameter      *V1CommonParameter      `protobuf:"bytes,1,opt,name=v1_common_parameter,json=v1CommonParameter,proto3" json:"v1_common_parameter,omitempty"`
	V1PersonParameterArray *V1PersonParameterArray `protobuf:"bytes,2,opt,name=v1_person_parameter_array,json=v1PersonParameterArray,proto3" json:"v1_person_parameter_array,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetPersonByConditionResponse) Reset() {
	*x = GetPersonByConditionResponse{}
	mi := &file_backend_internal_1_framework_parameter_grpc_person_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPersonByConditionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonByConditionResponse) ProtoMessage() {}

func (x *GetPersonByConditionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_internal_1_framework_parameter_grpc_person_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonByConditionResponse.ProtoReflect.Descriptor instead.
func (*GetPersonByConditionResponse) Descriptor() ([]byte, []int) {
	return file_backend_internal_1_framework_parameter_grpc_person_proto_rawDescGZIP(), []int{5}
}

func (x *GetPersonByConditionResponse) GetV1CommonParameter() *V1CommonParameter {
	if x != nil {
		return x.V1CommonParameter
	}
	return nil
}

func (x *GetPersonByConditionResponse) GetV1PersonParameterArray() *V1PersonParameterArray {
	if x != nil {
		return x.V1PersonParameterArray
	}
	return nil
}

type V1PersonParameter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *uint32                `protobuf:"varint,2,opt,name=id,proto3,oneof" json:"id,omitempty"`                                     // ID
	Name          *string                `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name,omitempty"`                                  // Name
	MailAddress   *string                `protobuf:"bytes,4,opt,name=mail_address,json=mailAddress,proto3,oneof" json:"mail_address,omitempty"` // Mail Address
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *V1PersonParameter) Reset() {
	*x = V1PersonParameter{}
	mi := &file_backend_internal_1_framework_parameter_grpc_person_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *V1PersonParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*V1PersonParameter) ProtoMessage() {}

func (x *V1PersonParameter) ProtoReflect() protoreflect.Message {
	mi := &file_backend_internal_1_framework_parameter_grpc_person_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use V1PersonParameter.ProtoReflect.Descriptor instead.
func (*V1PersonParameter) Descriptor() ([]byte, []int) {
	return file_backend_internal_1_framework_parameter_grpc_person_proto_rawDescGZIP(), []int{6}
}

func (x *V1PersonParameter) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *V1PersonParameter) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *V1PersonParameter) GetMailAddress() string {
	if x != nil && x.MailAddress != nil {
		return *x.MailAddress
	}
	return ""
}

type V1PersonParameterArray struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Persons       []*V1PersonParameter   `protobuf:"bytes,2,rep,name=persons,proto3" json:"persons,omitempty"` // Array of V1PersonParameter
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *V1PersonParameterArray) Reset() {
	*x = V1PersonParameterArray{}
	mi := &file_backend_internal_1_framework_parameter_grpc_person_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *V1PersonParameterArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*V1PersonParameterArray) ProtoMessage() {}

func (x *V1PersonParameterArray) ProtoReflect() protoreflect.Message {
	mi := &file_backend_internal_1_framework_parameter_grpc_person_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use V1PersonParameterArray.ProtoReflect.Descriptor instead.
func (*V1PersonParameterArray) Descriptor() ([]byte, []int) {
	return file_backend_internal_1_framework_parameter_grpc_person_proto_rawDescGZIP(), []int{7}
}

func (x *V1PersonParameterArray) GetPersons() []*V1PersonParameter {
	if x != nil {
		return x.Persons
	}
	return nil
}

var File_backend_internal_1_framework_parameter_grpc_person_proto protoreflect.FileDescriptor

var file_backend_internal_1_framework_parameter_grpc_person_proto_rawDesc = []byte{
	0x0a, 0x38, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2f, 0x31, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x67, 0x72, 0x70, 0x63,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x22, 0xdc, 0x01,
	0x0a, 0x11, 0x56, 0x31, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x31, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x09, 0x69, 0x6d,
	0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x31, 0x49, 0x6d, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x09, 0x69, 0x6d, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x3f, 0x0a, 0x07, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x31, 0x4d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x75, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x99, 0x01, 0x0a,
	0x07, 0x56, 0x31, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x32, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x31, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0xca, 0x02, 0x0a, 0x14, 0x56, 0x31, 0x49,
	0x6d, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x22, 0xc3, 0x02, 0x0a, 0x12, 0x56, 0x31, 0x4d, 0x75, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x65, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x72, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x17,
	0x63, 0x69, 0x72, 0x63, 0x75, 0x69, 0x74, 0x5f, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x5f,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x63,
	0x69, 0x72, 0x63, 0x75, 0x69, 0x74, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x73, 0x61, 0x6d,
	0x70, 0x6c, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x64, 0x65, 0x62, 0x75, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0xe6, 0x01, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x59, 0x0a, 0x13, 0x76,
	0x31, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x31, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x48, 0x00,
	0x52, 0x11, 0x76, 0x31, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x54, 0x0a, 0x13, 0x76, 0x31, 0x5f, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x31, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x11, 0x76, 0x31, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x42, 0x16, 0x0a, 0x14,
	0x5f, 0x76, 0x31, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x22, 0xda, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x13, 0x76, 0x31, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x31, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x11, 0x76, 0x31, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x64, 0x0a, 0x19, 0x76,
	0x31, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x31, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x16, 0x76, 0x31, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x41, 0x72, 0x72, 0x61,
	0x79, 0x22, 0x8a, 0x01, 0x0a, 0x11, 0x56, 0x31, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x6d,
	0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a,
	0x03, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x58,
	0x0a, 0x16, 0x56, 0x31, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x3e, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x31,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52,
	0x07, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x32, 0x88, 0x01, 0x0a, 0x0d, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x77, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x42, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x42, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x54, 0x5a, 0x52, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x59, 0x75, 0x6a, 0x69, 0x59, 0x61, 0x62, 0x65, 0x2f, 0x67, 0x6f, 0x2d, 0x64, 0x6f,
	0x63, 0x6b, 0x65, 0x72, 0x2d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x31,
	0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_backend_internal_1_framework_parameter_grpc_person_proto_rawDescOnce sync.Once
	file_backend_internal_1_framework_parameter_grpc_person_proto_rawDescData = file_backend_internal_1_framework_parameter_grpc_person_proto_rawDesc
)

func file_backend_internal_1_framework_parameter_grpc_person_proto_rawDescGZIP() []byte {
	file_backend_internal_1_framework_parameter_grpc_person_proto_rawDescOnce.Do(func() {
		file_backend_internal_1_framework_parameter_grpc_person_proto_rawDescData = protoimpl.X.CompressGZIP(file_backend_internal_1_framework_parameter_grpc_person_proto_rawDescData)
	})
	return file_backend_internal_1_framework_parameter_grpc_person_proto_rawDescData
}

var file_backend_internal_1_framework_parameter_grpc_person_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_backend_internal_1_framework_parameter_grpc_person_proto_goTypes = []any{
	(*V1CommonParameter)(nil),            // 0: grpc_parameter.v1.V1CommonParameter
	(*V1Error)(nil),                      // 1: grpc_parameter.v1.V1Error
	(*V1ImmutableParameter)(nil),         // 2: grpc_parameter.v1.V1ImmutableParameter
	(*V1MutableParameter)(nil),           // 3: grpc_parameter.v1.V1MutableParameter
	(*GetPersonByConditionRequest)(nil),  // 4: grpc_parameter.v1.GetPersonByConditionRequest
	(*GetPersonByConditionResponse)(nil), // 5: grpc_parameter.v1.GetPersonByConditionResponse
	(*V1PersonParameter)(nil),            // 6: grpc_parameter.v1.V1PersonParameter
	(*V1PersonParameterArray)(nil),       // 7: grpc_parameter.v1.V1PersonParameterArray
}
var file_backend_internal_1_framework_parameter_grpc_person_proto_depIdxs = []int32{
	1,  // 0: grpc_parameter.v1.V1CommonParameter.error:type_name -> grpc_parameter.v1.V1Error
	2,  // 1: grpc_parameter.v1.V1CommonParameter.immutable:type_name -> grpc_parameter.v1.V1ImmutableParameter
	3,  // 2: grpc_parameter.v1.V1CommonParameter.mutable:type_name -> grpc_parameter.v1.V1MutableParameter
	1,  // 3: grpc_parameter.v1.V1Error.errors:type_name -> grpc_parameter.v1.V1Error
	0,  // 4: grpc_parameter.v1.GetPersonByConditionRequest.v1_common_parameter:type_name -> grpc_parameter.v1.V1CommonParameter
	6,  // 5: grpc_parameter.v1.GetPersonByConditionRequest.v1_person_parameter:type_name -> grpc_parameter.v1.V1PersonParameter
	0,  // 6: grpc_parameter.v1.GetPersonByConditionResponse.v1_common_parameter:type_name -> grpc_parameter.v1.V1CommonParameter
	7,  // 7: grpc_parameter.v1.GetPersonByConditionResponse.v1_person_parameter_array:type_name -> grpc_parameter.v1.V1PersonParameterArray
	6,  // 8: grpc_parameter.v1.V1PersonParameterArray.persons:type_name -> grpc_parameter.v1.V1PersonParameter
	4,  // 9: grpc_parameter.v1.PersonService.GetPersonByCondition:input_type -> grpc_parameter.v1.GetPersonByConditionRequest
	5,  // 10: grpc_parameter.v1.PersonService.GetPersonByCondition:output_type -> grpc_parameter.v1.GetPersonByConditionResponse
	10, // [10:11] is the sub-list for method output_type
	9,  // [9:10] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_backend_internal_1_framework_parameter_grpc_person_proto_init() }
func file_backend_internal_1_framework_parameter_grpc_person_proto_init() {
	if File_backend_internal_1_framework_parameter_grpc_person_proto != nil {
		return
	}
	file_backend_internal_1_framework_parameter_grpc_person_proto_msgTypes[0].OneofWrappers = []any{}
	file_backend_internal_1_framework_parameter_grpc_person_proto_msgTypes[4].OneofWrappers = []any{}
	file_backend_internal_1_framework_parameter_grpc_person_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_backend_internal_1_framework_parameter_grpc_person_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_backend_internal_1_framework_parameter_grpc_person_proto_goTypes,
		DependencyIndexes: file_backend_internal_1_framework_parameter_grpc_person_proto_depIdxs,
		MessageInfos:      file_backend_internal_1_framework_parameter_grpc_person_proto_msgTypes,
	}.Build()
	File_backend_internal_1_framework_parameter_grpc_person_proto = out.File
	file_backend_internal_1_framework_parameter_grpc_person_proto_rawDesc = nil
	file_backend_internal_1_framework_parameter_grpc_person_proto_goTypes = nil
	file_backend_internal_1_framework_parameter_grpc_person_proto_depIdxs = nil
}
