services:
  postgres:
    restart: always
    container_name: postgres
    hostname: postgres
    build:
      context: ./db/engine/postgres
      dockerfile: Dockerfile
    ports:
      - ${POSTGRES_FRONT_PORT}:${POSTGRES_BACK_PORT}
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    user: root
    volumes:
      - ./db/engine/postgres/initdb.d:/docker-entrypoint-initdb.d
      - ./db/engine/postgres/data:/var/lib/postgres/data

  redis:
    restart: always
    container_name: redis
    build:
      context: ./db/engine/redis
      dockerfile: Dockerfile
    ports:
      - '6739:6739'
    volumes:
      - ./db/engine/redis/data:/data

  # localstack:
  #   restart: always
  #   container_name: localstack
  #   image: localstack/localstack:latest
  #   environment:
  #     - AWS_ACCESS_KEY_ID=test
  #     - AWS_SECRET_ACCESS_KEY=test
  #     - AWS_DEFAULT_REGION=ap-northeast-1
  #     - DEFAULT_REGION=ap-northeast-1
  #     - SERVICES=secretsmanager
  #     - DEBUG=1
  #     - DOCKER_HOST=unix:///var/run/docker.sock
  #     - LOCALSTACK_API_KEY=ls-VAMIViHe-zEKo-5850-6884-CiYOzatE1c9b
  #     - PERSISTENCE=1
  #   ports:
  #     - '4566:4566' # LocalStack API Gateway
  #     - '4510-4559:4510-4559' # AWS サービス用ポート
  #   volumes:
  #     - '${PWD}/backend/config/localstack_secrets.json:/etc/localstack/init/ready.d/secrets.json'
  #     - '${PWD}/backend/config/init-aws.sh:/etc/localstack/init/ready.d/init-aws.sh' # 起動時にリソース作成のスクリプトを実行する
  #     - '${PWD}/db/engine/localstack-data:/var/lib/localstack'

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.4.3
    container_name: kafka
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:v0.7.1
    ports:
      - '8080:8080'
    depends_on:
      - kafka
    restart: always
    environment:
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092

  backend:
    restart: always
    build:
      context: ./backend
      dockerfile: build/Dockerfile
    container_name: backend
    volumes:
      - ./backend:/go/src/backend
    ports:
      - ${GO_ECHO_PORT}:${GO_ECHO_PORT}
      - ${GRPC_PORT}:${GRPC_PORT}
      - '2345:2345' # デバッグポート
    security_opt:
      - 'seccomp:unconfined' # デバッガに必要
    cap_add:
      - SYS_PTRACE # デバッガに必要
    environment:
      # - AWS_ACCESS_KEY_ID=test
      # - AWS_SECRET_ACCESS_KEY=test
      # - AWS_DEFAULT_REGION=ap-northeast-1
      # - DEFAULT_REGION=ap-northeast-1
      - GOPATH=${GOPATH}
      - DEBUG_MODE=${DEBUG_MODE:-false}
      - ENV=${ENV:-lcl}
    # tty: true
    stdin_open: true
    links:
      - redis
      - postgres
      - kafka
      # - localstack
    depends_on:
      - redis
      - postgres
      - kafka
      # - localstack
